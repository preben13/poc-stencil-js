/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyAccordion {
    }
    interface MyBadge {
        "value": string;
    }
    interface MyButton {
        "disabled": boolean;
        "label": string;
    }
    interface MyCard {
        "cardtitle": string;
        "description": string;
        "imgurl": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface MyHorizontalTab {
        "innerTabs": string[];
        "tabs": string;
    }
}
declare global {
    interface HTMLMyAccordionElement extends Components.MyAccordion, HTMLStencilElement {
    }
    var HTMLMyAccordionElement: {
        prototype: HTMLMyAccordionElement;
        new (): HTMLMyAccordionElement;
    };
    interface HTMLMyBadgeElement extends Components.MyBadge, HTMLStencilElement {
    }
    var HTMLMyBadgeElement: {
        prototype: HTMLMyBadgeElement;
        new (): HTMLMyBadgeElement;
    };
    interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {
    }
    var HTMLMyButtonElement: {
        prototype: HTMLMyButtonElement;
        new (): HTMLMyButtonElement;
    };
    interface HTMLMyCardElement extends Components.MyCard, HTMLStencilElement {
    }
    var HTMLMyCardElement: {
        prototype: HTMLMyCardElement;
        new (): HTMLMyCardElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLMyHorizontalTabElement extends Components.MyHorizontalTab, HTMLStencilElement {
    }
    var HTMLMyHorizontalTabElement: {
        prototype: HTMLMyHorizontalTabElement;
        new (): HTMLMyHorizontalTabElement;
    };
    interface HTMLElementTagNameMap {
        "my-accordion": HTMLMyAccordionElement;
        "my-badge": HTMLMyBadgeElement;
        "my-button": HTMLMyButtonElement;
        "my-card": HTMLMyCardElement;
        "my-component": HTMLMyComponentElement;
        "my-horizontal-tab": HTMLMyHorizontalTabElement;
    }
}
declare namespace LocalJSX {
    interface MyAccordion {
    }
    interface MyBadge {
        "value"?: string;
    }
    interface MyButton {
        "disabled"?: boolean;
        "label"?: string;
    }
    interface MyCard {
        "cardtitle"?: string;
        "description"?: string;
        "imgurl"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface MyHorizontalTab {
        "innerTabs"?: string[];
        "tabs"?: string;
    }
    interface IntrinsicElements {
        "my-accordion": MyAccordion;
        "my-badge": MyBadge;
        "my-button": MyButton;
        "my-card": MyCard;
        "my-component": MyComponent;
        "my-horizontal-tab": MyHorizontalTab;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-accordion": LocalJSX.MyAccordion & JSXBase.HTMLAttributes<HTMLMyAccordionElement>;
            "my-badge": LocalJSX.MyBadge & JSXBase.HTMLAttributes<HTMLMyBadgeElement>;
            "my-button": LocalJSX.MyButton & JSXBase.HTMLAttributes<HTMLMyButtonElement>;
            "my-card": LocalJSX.MyCard & JSXBase.HTMLAttributes<HTMLMyCardElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "my-horizontal-tab": LocalJSX.MyHorizontalTab & JSXBase.HTMLAttributes<HTMLMyHorizontalTabElement>;
        }
    }
}
